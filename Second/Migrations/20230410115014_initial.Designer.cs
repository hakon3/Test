// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using Second.Data;

#nullable disable

namespace Second.Migrations
{
    [DbContext(typeof(SecondDbContext))]
    [Migration("20230410115014_initial")]
    partial class initial
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "7.0.4")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("Second.Data.City", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Country")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Latitude")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Longitude")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("Cities");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Country = "Norway",
                            Latitude = "59.91",
                            Longitude = "10.75",
                            Name = "Oslo"
                        },
                        new
                        {
                            Id = 2,
                            Country = "Sweden",
                            Latitude = "59.33",
                            Longitude = "18.07",
                            Name = "Stockholm"
                        },
                        new
                        {
                            Id = 3,
                            Country = "Denmark",
                            Latitude = "55.68",
                            Longitude = "12.57",
                            Name = "Copenhagen"
                        },
                        new
                        {
                            Id = 4,
                            Country = "Finland",
                            Latitude = "60.17",
                            Longitude = "24.94",
                            Name = "Helsinki"
                        },
                        new
                        {
                            Id = 5,
                            Country = "Spain",
                            Latitude = "40.42",
                            Longitude = "-3.70",
                            Name = "Madrid"
                        });
                });

            modelBuilder.Entity("Second.Data.CityWeather", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<int>("CityNavigationId")
                        .HasColumnType("int");

                    b.Property<int>("Cloudiness")
                        .HasColumnType("int");

                    b.Property<double>("Temperature")
                        .HasColumnType("float");

                    b.Property<DateTimeOffset>("Time")
                        .HasColumnType("datetimeoffset");

                    b.Property<double>("WindSpeed")
                        .HasColumnType("float");

                    b.HasKey("Id");

                    b.HasIndex("CityNavigationId");

                    b.ToTable("CityWeather");
                });

            modelBuilder.Entity("Second.Data.CityWeather", b =>
                {
                    b.HasOne("Second.Data.City", "CityNavigation")
                        .WithMany()
                        .HasForeignKey("CityNavigationId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("CityNavigation");
                });
#pragma warning restore 612, 618
        }
    }
}
